#!/usr/bin/php -n
<?php

/**
 *   888b     d888  .d8888b.   .d8888b.      d8888  888    d8P
 *   8888b   d8888 d88P  Y88b d88P  Y88b    d8P888  888   d8P
 *   88888b.d88888 888    888 888          d8P 888  888  d8P
 *   888Y88888P888 888        888d888b.   d8P  888  888d88K
 *   888 Y888P 888 888        888P "Y88b d88   888  8888888b
 *   888  Y8P  888 888    888 888    888 8888888888 888  Y88b
 *   888   "   888 Y88b  d88P Y88b  d88P       888  888   Y88b
 *   888       888  "Y8888P"   "Y8888P"        888  888    Y88b
 *
 *
 */

declare(strict_types = 1);

namespace ABadCafe\MC64K;

require_once '../MC64K.php';

const PASS = 1;
const FAIL = 0;

const TPL_EXAMPLE = [
    '%s #0',
    '%s #-1',
    '%s #-3',
    '%s #-5',
    '%s #-6',
    '%s #-128',
    '%s #-129',
    '%s #127',
    '%s #128',
    '%s .unresolved'
];

const MNEMONICS = [
    'bra.b', 'bra', 'bsr'
];

$oParser = new Parser\SourceLine\Instruction\Statement(new Parser\SourceLine\Label\Registry());

foreach (MNEMONICS as $sMnemonic) {
    foreach (TPL_EXAMPLE as $sTemplate) {
        $sInput = sprintf($sTemplate, $sMnemonic);
        printf("\t%-40s => ", $sInput);
        try {
            echo bin2hex($oParser->parse($sInput));
        } catch (\Throwable $oError) {
            echo "Parse Error: ", get_class($oError), " - ", $oError->getMessage();
        }
        echo "\n";
    }
}

