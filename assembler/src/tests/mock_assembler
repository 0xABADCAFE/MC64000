#!/usr/bin/php -n
<?php

/**
 *   888b     d888  .d8888b.   .d8888b.      d8888  888    d8P
 *   8888b   d8888 d88P  Y88b d88P  Y88b    d8P888  888   d8P
 *   88888b.d88888 888    888 888          d8P 888  888  d8P
 *   888Y88888P888 888        888d888b.   d8P  888  888d88K
 *   888 Y888P 888 888        888P "Y88b d88   888  8888888b
 *   888  Y8P  888 888    888 888    888 8888888888 888  Y88b
 *   888   "   888 Y88b  d88P Y88b  d88P       888  888   Y88b
 *   888       888  "Y8888P"   "Y8888P"        888  888    Y88b
 *
 *
 */

declare(strict_types = 1);

namespace ABadCafe\MC64K;

require_once '../MC64K.php';

if (!isset($_SERVER['argv'][1])) {
    echo "No assembler source file specified.\n";
    exit(1);
}

$sSourceFile = $_SERVER['argv'][1];

if (!file_exists($sSourceFile) || !is_readable($sSourceFile)) {
    echo "Source file ", $sSourceFile, " could not be opened.\n";
    exit(1);
}

$oParser = new Parser\SourceLine\Instruction\Statement();

$rSource  = fopen($sSourceFile, 'r');
$iLine    = 0;
$iCodePos = 0;

while ( ($sSourceLine = fgets($rSource)) ) {
    ++$iLine;
    if (preg_match('/^\s+(.*?)$/m', rtrim($sSourceLine), $aMatches)) {
        $sStatement = $aMatches[1];
        $sBytecode  = $oParser->parse($sStatement);
        $iLength    = $sBytecode ? strlen($sBytecode) : 0;
        printf(
            "%4d [%5d]   %-44s : [%2d] %s\n",
            $iLine,
            $iCodePos,
            $sStatement,
            $iLength,
            Utils\Binary::format($sBytecode)
        );
        $iCodePos += $iLength;
    }
}

fclose($rSource);

