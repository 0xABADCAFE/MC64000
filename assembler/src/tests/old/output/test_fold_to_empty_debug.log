   0 Folding exg    r0, r0 to '' (Src Reg r0, Dst Reg r0 using foldIfOperandsSame)
   1 Folding fexg  fp1, fp1 to '' (Src Reg fp1, Dst Reg fp1 using foldIfOperandsSame)
   2 Folding move.b d0, d0 to '' (Operation has no effect)
   3 Folding move.w d0, d0 to '' (Operation has no effect)
   4 Folding move.l d0, d0 to '' (Operation has no effect)
   5 Folding move.q d0, d0 to '' (Operation has no effect)
   6 Folding move.b (r0, d1.b), (r0, d1.b) to '' (Operation has no effect)
   7 Folding move.w (r0, d1.w * 2), (r0, d1.w * 2) to '' (Operation has no effect)
   8 Folding move.l (r0, d1.l * 4), (r0, d1.l * 4) to '' (Operation has no effect)
   9 Folding move.q (r0, d1.q * 8), (r0, d1.q * 8) to '' (Operation has no effect)
  10 Folding move.b 1(r0, d1.b), 1(r0, d1.b) to '' (Operation has no effect)
  11 Folding move.w 2(r0, d1.w * 2), 2(r0, d1.w * 2) to '' (Operation has no effect)
  12 Folding move.l 4(r0, d1.l * 4), 4(r0, d1.l * 4) to '' (Operation has no effect)
  13 Folding move.q 8(r0, d1.q * 8), 8(r0, d1.q * 8) to '' (Operation has no effect)
  14 Folding or.b   #0, r0 to '' (SrcEA #0 using foldEmpty)
  15 Folding or.w   #0, r0 to '' (SrcEA #0 using foldEmpty)
  16 Folding or.l   #0, r0 to '' (SrcEA #0 using foldEmpty)
  17 Folding or.q   #0, r0 to '' (SrcEA #0 using foldEmpty)
  18 Folding add.b  #0, r0 to '' (SrcEA #0 using foldEmpty)
  19 Folding add.w  #0, r0 to '' (SrcEA #0 using foldEmpty)
  20 Folding add.l  #0, r0 to '' (SrcEA #0 using foldEmpty)
  21 Folding add.q  #0, r0 to '' (SrcEA #0 using foldEmpty)
  22 Folding sub.b  #0, r0 to '' (SrcEA #0 using foldEmpty)
  23 Folding sub.w  #0, r0 to '' (SrcEA #0 using foldEmpty)
  24 Folding sub.l  #0, r0 to '' (SrcEA #0 using foldEmpty)
  25 Folding sub.q  #0, r0 to '' (SrcEA #0 using foldEmpty)
  26 Folding or.b   #0, (r0) to '' (SrcEA #0 using foldEmpty)
  27 Folding or.w   #0, (r0) to '' (SrcEA #0 using foldEmpty)
  28 Folding or.l   #0, (r0) to '' (SrcEA #0 using foldEmpty)
  29 Folding or.q   #0, (r0) to '' (SrcEA #0 using foldEmpty)
  30 Folding add.b  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  31 Folding add.w  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  32 Folding add.l  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  33 Folding add.q  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  34 Folding sub.b  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  35 Folding sub.w  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  36 Folding sub.l  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  37 Folding sub.q  #0, (r0) to '' (SrcEA #0 using foldEmpty)
  38 Folding muls.b #1, r0 to '' (SrcEA #1 using foldEmpty)
  39 Folding muls.w #1, r0 to '' (SrcEA #1 using foldEmpty)
  40 Folding muls.l #1, r0 to '' (SrcEA #1 using foldEmpty)
  41 Folding muls.q #1, r0 to '' (SrcEA #1 using foldEmpty)
  42 Folding mulu.b #1, r0 to '' (SrcEA #1 using foldEmpty)
  43 Folding mulu.w #1, r0 to '' (SrcEA #1 using foldEmpty)
  44 Folding mulu.l #1, r0 to '' (SrcEA #1 using foldEmpty)
  45 Folding mulu.q #1, r0 to '' (SrcEA #1 using foldEmpty)
  46 Folding divs.b #1, r0 to '' (SrcEA #1 using foldEmpty)
  47 Folding divs.w #1, r0 to '' (SrcEA #1 using foldEmpty)
  48 Folding divs.l #1, r0 to '' (SrcEA #1 using foldEmpty)
  49 Folding divs.q #1, r0 to '' (SrcEA #1 using foldEmpty)
  50 Folding divu.b #1, r0 to '' (SrcEA #1 using foldEmpty)
  51 Folding divu.w #1, r0 to '' (SrcEA #1 using foldEmpty)
  52 Folding divu.l #1, r0 to '' (SrcEA #1 using foldEmpty)
  53 Folding divu.q #1, r0 to '' (SrcEA #1 using foldEmpty)
  54 Folding biz.b  #1, #16 to '' (SrcEA #1 using foldIsZero)
  55 Folding biz.w  #1, #16 to '' (SrcEA #1 using foldIsZero)
  56 Folding biz.l  #1, #16 to '' (SrcEA #1 using foldIsZero)
  57 Folding biz.q  #1, #16 to '' (SrcEA #1 using foldIsZero)
  58 Folding bnz.b  #0, #16 to '' (SrcEA #0 using foldIsNotZero)
  59 Folding bnz.w  #0, #16 to '' (SrcEA #0 using foldIsNotZero)
  60 Folding bnz.l  #0, #16 to '' (SrcEA #0 using foldIsNotZero)
  61 Folding bnz.q  #0, #16 to '' (SrcEA #0 using foldIsNotZero)
  62 Folding bmi.b  #1, #16 to '' (SrcEA #1 using foldIsMinus)
  63 Folding bmi.w  #1, #16 to '' (SrcEA #1 using foldIsMinus)
  64 Folding bmi.l  #1, #16 to '' (SrcEA #1 using foldIsMinus)
  65 Folding bmi.q  #1, #16 to '' (SrcEA #1 using foldIsMinus)
  66 Folding bpl.b  #-1, #16 to '' (SrcEA #-1 using foldIsPlus)
  67 Folding bpl.w  #-1, #16 to '' (SrcEA #-1 using foldIsPlus)
  68 Folding bpl.l  #-1, #16 to '' (SrcEA #-1 using foldIsPlus)
  69 Folding bpl.q  #-1, #16 to '' (SrcEA #-1 using foldIsPlus)
  70 Folding fbiz.s  #1., #16 to '' (SrcEA #1 using foldIsZero)
  71 Folding fbiz.d  #1., #16 to '' (SrcEA #1 using foldIsZero)
  72 Folding fbnz.s  #0., #16 to '' (SrcEA #0 using foldIsNotZero)
  73 Folding fbnz.d  #0., #16 to '' (SrcEA #0 using foldIsNotZero)
  74 Folding fbmi.s  #1., #16 to '' (SrcEA #1 using foldIsMinus)
  75 Folding fbmi.d  #1., #16 to '' (SrcEA #1 using foldIsMinus)
  76 Folding fbpl.s  #-1., #16 to '' (SrcEA #-1 using foldIsPlus)
  77 Folding fbpl.d  #-1., #16 to '' (SrcEA #-1 using foldIsPlus)
  78 Folding bne.b #1, #1, #16 to '' (SrcEA #1, DstEA #1 using foldImmediateIsNotEqual)
  79 Folding bne.w #1, #1, #16 to '' (SrcEA #1, DstEA #1 using foldImmediateIsNotEqual)
  80 Folding bne.l #1, #1, #16 to '' (SrcEA #1, DstEA #1 using foldImmediateIsNotEqual)
  81 Folding bne.q #1, #1, #16 to '' (SrcEA #1, DstEA #1 using foldImmediateIsNotEqual)
  82 Folding blt.b #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessThan)
  83 Folding blt.w #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessThan)
  84 Folding blt.l #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessThan)
  85 Folding blt.q #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessThan)
  86 Folding ble.b #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessOrEqual)
  87 Folding ble.w #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessOrEqual)
  88 Folding ble.l #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessOrEqual)
  89 Folding ble.q #1, #0, #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessOrEqual)
  90 Folding beq.b #1, #-1, #16 to '' (SrcEA #1, DstEA #-1 using foldImmediateIsEqual)
  91 Folding beq.w #1, #-1, #16 to '' (SrcEA #1, DstEA #-1 using foldImmediateIsEqual)
  92 Folding beq.l #1, #-1, #16 to '' (SrcEA #1, DstEA #-1 using foldImmediateIsEqual)
  93 Folding beq.q #1, #-1, #16 to '' (SrcEA #1, DstEA #-1 using foldImmediateIsEqual)
  94 Folding bge.b #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterOrEqual)
  95 Folding bge.w #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterOrEqual)
  96 Folding bge.l #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterOrEqual)
  97 Folding bge.q #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterOrEqual)
  98 Folding bgt.b #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterThan)
  99 Folding bgt.w #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterThan)
 100 Folding bgt.l #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterThan)
 101 Folding bgt.q #1, #2, #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterThan)
 102 Folding fbne.s #1., #1., #16 to '' (SrcEA #1, DstEA #1 using foldImmediateIsNotEqual)
 103 Folding fbne.d #1., #1., #16 to '' (SrcEA #1, DstEA #1 using foldImmediateIsNotEqual)
 104 Folding fblt.s #1., #0., #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessThan)
 105 Folding fblt.d #1., #0., #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessThan)
 106 Folding fble.s #1., #0., #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessOrEqual)
 107 Folding fble.d #1., #0., #16 to '' (SrcEA #1, DstEA #0 using foldImmediateIsLessOrEqual)
 108 Folding fbeq.s #1., #-1., #16 to '' (SrcEA #1, DstEA #-1 using foldImmediateIsEqual)
 109 Folding fbeq.d #1., #-1., #16 to '' (SrcEA #1, DstEA #-1 using foldImmediateIsEqual)
 110 Folding fbge.s #1., #2., #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterOrEqual)
 111 Folding fbge.d #1., #2., #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterOrEqual)
 112 Folding fbgt.s #1., #2., #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterThan)
 113 Folding fbgt.d #1., #2., #16 to '' (SrcEA #1, DstEA #2 using foldImmediateIsGreaterThan)
 114 Folding bne.b r0, r0, #16 to '' (SrcEA r0, DstEA r0 using foldImmediateIsNotEqual)
 115 Folding bne.w r0, r0, #16 to '' (SrcEA r0, DstEA r0 using foldImmediateIsNotEqual)
 116 Folding bne.l r0, r0, #16 to '' (SrcEA r0, DstEA r0 using foldImmediateIsNotEqual)
 117 Folding bne.q r0, r0, #16 to '' (SrcEA r0, DstEA r0 using foldImmediateIsNotEqual)
 118 Folding bne.b (r0), (r0), #16 to '' (SrcEA (r0), DstEA (r0) using foldImmediateIsNotEqual)
 119 Folding bne.w (r0), (r0), #16 to '' (SrcEA (r0), DstEA (r0) using foldImmediateIsNotEqual)
 120 Folding bne.l (r0), (r0), #16 to '' (SrcEA (r0), DstEA (r0) using foldImmediateIsNotEqual)
 121 Folding bne.q (r0), (r0), #16 to '' (SrcEA (r0), DstEA (r0) using foldImmediateIsNotEqual)
 122 Folding bne.b 8(r0), 8(r0), #16 to '' (SrcEA 8(r0), DstEA 8(r0) using foldImmediateIsNotEqual)
 123 Folding bne.w 8(r0), 8(r0), #16 to '' (SrcEA 8(r0), DstEA 8(r0) using foldImmediateIsNotEqual)
 124 Folding bne.l 8(r0), 8(r0), #16 to '' (SrcEA 8(r0), DstEA 8(r0) using foldImmediateIsNotEqual)
 125 Folding bne.q 8(r0), 8(r0), #16 to '' (SrcEA 8(r0), DstEA 8(r0) using foldImmediateIsNotEqual)
 126 Folding bne.b (r0, d1.b), (r0, d1.b), #16 to '' (SrcEA (r0, d1.b), DstEA (r0, d1.b) using foldImmediateIsNotEqual)
 127 Folding bne.w (r0, d1.w * 2), (r0, d1.w * 2), #16 to '' (SrcEA (r0, d1.w * 2), DstEA (r0, d1.w * 2) using foldImmediateIsNotEqual)
 128 Folding bne.l (r0, d1.l * 4), (r0, d1.l * 4), #16 to '' (SrcEA (r0, d1.l * 4), DstEA (r0, d1.l * 4) using foldImmediateIsNotEqual)
 129 Folding bne.q (r0, d1.q * 8), (r0, d1.q * 8), #16 to '' (SrcEA (r0, d1.q * 8), DstEA (r0, d1.q * 8) using foldImmediateIsNotEqual)
 130 Folding bne.b 1(r0, d1.b), 1(r0, d1.b), #16 to '' (SrcEA 1(r0, d1.b), DstEA 1(r0, d1.b) using foldImmediateIsNotEqual)
 131 Folding bne.w 2(r0, d1.w * 2), 2(r0, d1.w * 2), #16 to '' (SrcEA 2(r0, d1.w * 2), DstEA 2(r0, d1.w * 2) using foldImmediateIsNotEqual)
 132 Folding bne.l 4(r0, d1.l * 4), 4(r0, d1.l * 4), #16 to '' (SrcEA 4(r0, d1.l * 4), DstEA 4(r0, d1.l * 4) using foldImmediateIsNotEqual)
 133 Folding bne.q 8(r0, d1.q * 8), 8(r0, d1.q * 8), #16 to '' (SrcEA 8(r0, d1.q * 8), DstEA 8(r0, d1.q * 8) using foldImmediateIsNotEqual)
 134 Folding bne.b 8(pc), 8(pc), #16 to '' (SrcEA 8(pc), DstEA 8(pc) using foldImmediateIsNotEqual)
 135 Folding bne.w 8(pc), 8(pc), #16 to '' (SrcEA 8(pc), DstEA 8(pc) using foldImmediateIsNotEqual)
 136 Folding bne.l 8(pc), 8(pc), #16 to '' (SrcEA 8(pc), DstEA 8(pc) using foldImmediateIsNotEqual)
 137 Folding bne.q 8(pc), 8(pc), #16 to '' (SrcEA 8(pc), DstEA 8(pc) using foldImmediateIsNotEqual)
 138 Folding bne.b (pc, d0.b), (pc, d0.b), #16 to '' (SrcEA (pc, d0.b), DstEA (pc, d0.b) using foldImmediateIsNotEqual)
 139 Folding bne.w (pc, d0.w * 2), (pc, d0.w * 2), #16 to '' (SrcEA (pc, d0.w * 2), DstEA (pc, d0.w * 2) using foldImmediateIsNotEqual)
 140 Folding bne.l (pc, d0.l * 4), (pc, d0.l * 4), #16 to '' (SrcEA (pc, d0.l * 4), DstEA (pc, d0.l * 4) using foldImmediateIsNotEqual)
 141 Folding bne.q (pc, d0.q * 8), (pc, d0.q * 8), #16 to '' (SrcEA (pc, d0.q * 8), DstEA (pc, d0.q * 8) using foldImmediateIsNotEqual)
 142 Folding bne.b 1(pc, d0.b), 1(pc, d0.b), #16 to '' (SrcEA 1(pc, d0.b), DstEA 1(pc, d0.b) using foldImmediateIsNotEqual)
 143 Folding bne.w 2(pc, d0.w * 2), 2(pc, d0.w * 2), #16 to '' (SrcEA 2(pc, d0.w * 2), DstEA 2(pc, d0.w * 2) using foldImmediateIsNotEqual)
 144 Folding bne.l 4(pc, d0.l * 4), 4(pc, d0.l * 4), #16 to '' (SrcEA 4(pc, d0.l * 4), DstEA 4(pc, d0.l * 4) using foldImmediateIsNotEqual)
 145 Folding bne.q 8(pc, d0.q * 8), 8(pc, d0.q * 8), #16 to '' (SrcEA 8(pc, d0.q * 8), DstEA 8(pc, d0.q * 8) using foldImmediateIsNotEqual)
 146 Folding fbne.s fp0, fp0, #16 to '' (SrcEA fp0, DstEA fp0 using foldImmediateIsNotEqual)
 147 Folding fbne.d fp0, fp0, #16 to '' (SrcEA fp0, DstEA fp0 using foldImmediateIsNotEqual)
 148 Folding fbne.s (r0), (r0), #16 to '' (SrcEA (r0), DstEA (r0) using foldImmediateIsNotEqual)
 149 Folding fbne.d (r0), (r0), #16 to '' (SrcEA (r0), DstEA (r0) using foldImmediateIsNotEqual)
 150 Folding fbne.s 8(r0), 8(r0), #16 to '' (SrcEA 8(r0), DstEA 8(r0) using foldImmediateIsNotEqual)
 151 Folding fbne.d 8(r0), 8(r0), #16 to '' (SrcEA 8(r0), DstEA 8(r0) using foldImmediateIsNotEqual)
 152 Folding fbne.s (r0, d1.l * 4), (r0, d1.l * 4), #16 to '' (SrcEA (r0, d1.l * 4), DstEA (r0, d1.l * 4) using foldImmediateIsNotEqual)
 153 Folding fbne.d (r0, d1.q * 8), (r0, d1.q * 8), #16 to '' (SrcEA (r0, d1.q * 8), DstEA (r0, d1.q * 8) using foldImmediateIsNotEqual)
 154 Folding fbne.s 4(r0, d1.l * 4), 4(r0, d1.l * 4), #16 to '' (SrcEA 4(r0, d1.l * 4), DstEA 4(r0, d1.l * 4) using foldImmediateIsNotEqual)
 155 Folding fbne.d 8(r0, d1.q * 8), 8(r0, d1.q * 8), #16 to '' (SrcEA 8(r0, d1.q * 8), DstEA 8(r0, d1.q * 8) using foldImmediateIsNotEqual)
 156 Folding fbne.s 8(pc), 8(pc), #16 to '' (SrcEA 8(pc), DstEA 8(pc) using foldImmediateIsNotEqual)
 157 Folding fbne.d 8(pc), 8(pc), #16 to '' (SrcEA 8(pc), DstEA 8(pc) using foldImmediateIsNotEqual)
 158 Folding fbne.s (pc, d0.l * 4), (pc, d0.l * 4), #16 to '' (SrcEA (pc, d0.l * 4), DstEA (pc, d0.l * 4) using foldImmediateIsNotEqual)
 159 Folding fbne.d (pc, d0.q * 8), (pc, d0.q * 8), #16 to '' (SrcEA (pc, d0.q * 8), DstEA (pc, d0.q * 8) using foldImmediateIsNotEqual)
 160 Folding fbne.s 4(pc, d0.l * 4), 4(pc, d0.l * 4), #16 to '' (SrcEA 4(pc, d0.l * 4), DstEA 4(pc, d0.l * 4) using foldImmediateIsNotEqual)
 161 Folding fbne.d 8(pc, d0.q * 8), 8(pc, d0.q * 8), #16 to '' (SrcEA 8(pc, d0.q * 8), DstEA 8(pc, d0.q * 8) using foldImmediateIsNotEqual)
 162 Folding biz.b  #0, #0 to '' (Branch to next instruction has no useful effect)
 163 Folding biz.w  #0, #0 to '' (Branch to next instruction has no useful effect)
 164 Folding biz.l  #0, #0 to '' (Branch to next instruction has no useful effect)
 165 Folding biz.q  #0, #0 to '' (Branch to next instruction has no useful effect)
 166 Folding bnz.b  #1, #0 to '' (Branch to next instruction has no useful effect)
 167 Folding bnz.w  #1, #0 to '' (Branch to next instruction has no useful effect)
 168 Folding bnz.l  #1, #0 to '' (Branch to next instruction has no useful effect)
 169 Folding bnz.q  #1, #0 to '' (Branch to next instruction has no useful effect)
 170 Folding bmi.b  #-1, #0 to '' (Branch to next instruction has no useful effect)
 171 Folding bmi.w  #-1, #0 to '' (Branch to next instruction has no useful effect)
 172 Folding bmi.l  #-1, #0 to '' (Branch to next instruction has no useful effect)
 173 Folding bmi.q  #-1, #0 to '' (Branch to next instruction has no useful effect)
 174 Folding bpl.b  #1, #0 to '' (Branch to next instruction has no useful effect)
 175 Folding bpl.w  #1, #0 to '' (Branch to next instruction has no useful effect)
 176 Folding bpl.l  #1, #0 to '' (Branch to next instruction has no useful effect)
 177 Folding bpl.q  #1, #0 to '' (Branch to next instruction has no useful effect)
 178 Folding fbiz.s  #0., #0 to '' (Branch to next instruction has no useful effect)
 179 Folding fbiz.d  #0., #0 to '' (Branch to next instruction has no useful effect)
 180 Folding fbnz.s  #1., #0 to '' (Branch to next instruction has no useful effect)
 181 Folding fbnz.d  #1., #0 to '' (Branch to next instruction has no useful effect)
 182 Folding fbmi.s  #-1., #0 to '' (Branch to next instruction has no useful effect)
 183 Folding fbmi.d  #-1., #0 to '' (Branch to next instruction has no useful effect)
 184 Folding fbpl.s  #1., #0 to '' (Branch to next instruction has no useful effect)
 185 Folding fbpl.d  #1., #0 to '' (Branch to next instruction has no useful effect)
 186 Folding bne.b #0, #1, #0 to '' (Branch to next instruction has no useful effect)
 187 Folding bne.w #0, #1, #0 to '' (Branch to next instruction has no useful effect)
 188 Folding bne.l #0, #1, #0 to '' (Branch to next instruction has no useful effect)
 189 Folding bne.q #0, #1, #0 to '' (Branch to next instruction has no useful effect)
 190 Folding blt.b #1, #2, #0 to '' (Branch to next instruction has no useful effect)
 191 Folding blt.w #1, #2, #0 to '' (Branch to next instruction has no useful effect)
 192 Folding blt.l #1, #2, #0 to '' (Branch to next instruction has no useful effect)
 193 Folding blt.q #1, #2, #0 to '' (Branch to next instruction has no useful effect)
 194 Folding ble.b #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 195 Folding ble.w #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 196 Folding ble.l #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 197 Folding ble.q #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 198 Folding beq.b #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 199 Folding beq.w #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 200 Folding beq.l #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 201 Folding beq.q #1, #1, #0 to '' (Branch to next instruction has no useful effect)
 202 Folding bge.b #2, #2, #0 to '' (Branch to next instruction has no useful effect)
 203 Folding bge.w #2, #2, #0 to '' (Branch to next instruction has no useful effect)
 204 Folding bge.l #2, #2, #0 to '' (Branch to next instruction has no useful effect)
 205 Folding bge.q #2, #2, #0 to '' (Branch to next instruction has no useful effect)
 206 Folding bgt.b #3, #2, #0 to '' (Branch to next instruction has no useful effect)
 207 Folding bgt.w #3, #2, #0 to '' (Branch to next instruction has no useful effect)
 208 Folding bgt.l #3, #2, #0 to '' (Branch to next instruction has no useful effect)
 209 Folding bgt.q #3, #2, #0 to '' (Branch to next instruction has no useful effect)
 210 Folding fbne.s #0., #1., #0 to '' (Branch to next instruction has no useful effect)
 211 Folding fbne.d #0., #1., #0 to '' (Branch to next instruction has no useful effect)
 212 Folding fblt.s #1., #2., #0 to '' (Branch to next instruction has no useful effect)
 213 Folding fblt.d #1., #2., #0 to '' (Branch to next instruction has no useful effect)
 214 Folding fble.s #1., #1., #0 to '' (Branch to next instruction has no useful effect)
 215 Folding fble.d #1., #1., #0 to '' (Branch to next instruction has no useful effect)
 216 Folding fbeq.s #1., #1., #0 to '' (Branch to next instruction has no useful effect)
 217 Folding fbeq.d #1., #1., #0 to '' (Branch to next instruction has no useful effect)
 218 Folding fbge.s #3., #2., #0 to '' (Branch to next instruction has no useful effect)
 219 Folding fbge.d #3., #2., #0 to '' (Branch to next instruction has no useful effect)
 220 Folding fbgt.s #3., #2., #0 to '' (Branch to next instruction has no useful effect)
 221 Folding fbgt.d #3., #2., #0 to '' (Branch to next instruction has no useful effect)
 222 Folding beq.b r0, r0, #0 to '' (Branch to next instruction has no useful effect)
 223 Folding beq.w r0, r0, #0 to '' (Branch to next instruction has no useful effect)
 224 Folding beq.l r0, r0, #0 to '' (Branch to next instruction has no useful effect)
 225 Folding beq.q r0, r0, #0 to '' (Branch to next instruction has no useful effect)
 226 Folding beq.b (r0), (r0), #0 to '' (Branch to next instruction has no useful effect)
 227 Folding beq.w (r0), (r0), #0 to '' (Branch to next instruction has no useful effect)
 228 Folding beq.l (r0), (r0), #0 to '' (Branch to next instruction has no useful effect)
 229 Folding beq.q (r0), (r0), #0 to '' (Branch to next instruction has no useful effect)
 230 Folding beq.b 8(r0), 8(r0), #0 to '' (Branch to next instruction has no useful effect)
 231 Folding beq.w 8(r0), 8(r0), #0 to '' (Branch to next instruction has no useful effect)
 232 Folding beq.l 8(r0), 8(r0), #0 to '' (Branch to next instruction has no useful effect)
 233 Folding beq.q 8(r0), 8(r0), #0 to '' (Branch to next instruction has no useful effect)
 234 Folding beq.b (r0, d1.b), (r0, d1.b), #0 to '' (Branch to next instruction has no useful effect)
 235 Folding beq.w (r0, d1.w * 2), (r0, d1.w * 2), #0 to '' (Branch to next instruction has no useful effect)
 236 Folding beq.l (r0, d1.l * 4), (r0, d1.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 237 Folding beq.q (r0, d1.q * 8), (r0, d1.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 238 Folding beq.b 1(r0, d1.b), 1(r0, d1.b), #0 to '' (Branch to next instruction has no useful effect)
 239 Folding beq.w 2(r0, d1.w * 2), 2(r0, d1.w * 2), #0 to '' (Branch to next instruction has no useful effect)
 240 Folding beq.l 4(r0, d1.l * 4), 4(r0, d1.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 241 Folding beq.q 8(r0, d1.q * 8), 8(r0, d1.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 242 Folding beq.b 8(pc), 8(pc), #0 to '' (Branch to next instruction has no useful effect)
 243 Folding beq.w 8(pc), 8(pc), #0 to '' (Branch to next instruction has no useful effect)
 244 Folding beq.l 8(pc), 8(pc), #0 to '' (Branch to next instruction has no useful effect)
 245 Folding beq.q 8(pc), 8(pc), #0 to '' (Branch to next instruction has no useful effect)
 246 Folding beq.b (pc, d0.b), (pc, d0.b), #0 to '' (Branch to next instruction has no useful effect)
 247 Folding beq.w (pc, d0.w * 2), (pc, d0.w * 2), #0 to '' (Branch to next instruction has no useful effect)
 248 Folding beq.l (pc, d0.l * 4), (pc, d0.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 249 Folding beq.q (pc, d0.q * 8), (pc, d0.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 250 Folding beq.b 1(pc, d0.b), 1(pc, d0.b), #0 to '' (Branch to next instruction has no useful effect)
 251 Folding beq.w 2(pc, d0.w * 2), 2(pc, d0.w * 2), #0 to '' (Branch to next instruction has no useful effect)
 252 Folding beq.l 4(pc, d0.l * 4), 4(pc, d0.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 253 Folding beq.q 8(pc, d0.q * 8), 8(pc, d0.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 254 Folding fbeq.s fp0, fp0, #0 to '' (Branch to next instruction has no useful effect)
 255 Folding fbeq.d fp0, fp0, #0 to '' (Branch to next instruction has no useful effect)
 256 Folding fbeq.s (r0), (r0), #0 to '' (Branch to next instruction has no useful effect)
 257 Folding fbeq.d (r0), (r0), #0 to '' (Branch to next instruction has no useful effect)
 258 Folding fbeq.s 8(r0), 8(r0), #0 to '' (Branch to next instruction has no useful effect)
 259 Folding fbeq.d 8(r0), 8(r0), #0 to '' (Branch to next instruction has no useful effect)
 260 Folding fbeq.s (r0, d1.l * 4), (r0, d1.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 261 Folding fbeq.d (r0, d1.q * 8), (r0, d1.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 262 Folding fbeq.s 4(r0, d1.l * 4), 4(r0, d1.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 263 Folding fbeq.d 8(r0, d1.q * 8), 8(r0, d1.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 264 Folding fbeq.s 8(pc), 8(pc), #0 to '' (Branch to next instruction has no useful effect)
 265 Folding fbeq.d 8(pc), 8(pc), #0 to '' (Branch to next instruction has no useful effect)
 266 Folding fbeq.s (pc, d0.l * 4), (pc, d0.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 267 Folding fbeq.d (pc, d0.q * 8), (pc, d0.q * 8), #0 to '' (Branch to next instruction has no useful effect)
 268 Folding fbeq.s 4(pc, d0.l * 4), 4(pc, d0.l * 4), #0 to '' (Branch to next instruction has no useful effect)
 269 Folding fbeq.d 8(pc, d0.q * 8), 8(pc, d0.q * 8), #0 to '' (Branch to next instruction has no useful effect)
