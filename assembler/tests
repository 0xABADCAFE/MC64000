#!/usr/bin/php
<?php

/**
 *   888b     d888  .d8888b.   .d8888b.      d8888  888    d8P
 *   8888b   d8888 d88P  Y88b d88P  Y88b    d8P888  888   d8P
 *   88888b.d88888 888    888 888          d8P 888  888  d8P
 *   888Y88888P888 888        888d888b.   d8P  888  888d88K
 *   888 Y888P 888 888        888P "Y88b d88   888  8888888b
 *   888  Y8P  888 888    888 888    888 8888888888 888  Y88b
 *   888   "   888 Y88b  d88P Y88b  d88P       888  888   Y88b
 *   888       888  "Y8888P"   "Y8888P"        888  888    Y88b
 *
 *    - 64-bit 680x0-inspired Virtual Machine and assembler -
 */

declare(strict_types = 1);

namespace ABadCafe\MC64K;

require_once 'src/MC64K.php';

/** @var string|null $sTestPath */
$sTestPath = $_SERVER['argv'][1] ?? null;

if (null !== $sTestPath) {
    if (include($sTestPath)) {
        if (preg_match('/\/([a-zA-Z0-9]+)\.php$/', $sTestPath, $aMatches)) {
            $sClassName = "\\ABadCafe\\MC64K\\Tests\\" . $aMatches[1];
            if (class_exists($sClassName)) {
                try {
                    $oTest = new $sClassName;
                    $oTest->setUp();
                    $oTest->run();
                    $oTest->tearDown();
                } catch (\Throwable $oError) {
                    Utils\Log::write($oError->__toString() . "\n");
                }
            } else {
                echo "Skipping Test: ", $sClassName, "\n";
            }
        }
    }
} else {
    $aTests = (array)glob('src/tests/*.php');
    foreach ($aTests as $sTestPath) {
        echo "Running ", $sTestPath, "\n";
        $sCommand = escapeshellcmd($_SERVER['argv'][0] . ' ' . $sTestPath);
        system($sCommand);
    }
}




